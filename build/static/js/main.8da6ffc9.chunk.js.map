{"version":3,"sources":["images/sky2.png","styles.js","components/getJobsButton.jsx","views/home.jsx","components/jobCard/styles.js","components/jobCard/jobCard.jsx","components/filter.jsx","views/jobsList/styles.js","views/jobsList/jobsList.jsx","routes.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","styled","button","_templateObject","props","primary","Title","h1","_templateObject2","Subtitle","h2","_templateObject3","Wrapper","section","_templateObject4","backgroundColor","GetJobsButton","clickHandler","window","location","href","_this2","this","react_default","a","createElement","background","onClick","React","Component","Background","div","home_templateObject","backgroundImg","BackgroundOverlay","home_templateObject2","TitleWrapper","home_templateObject3","Home","state","getJobsButton","CardContainer","styles_templateObject","Logo","img","styles_templateObject2","src","JobTitle","styles_templateObject3","JobLocation","styles_templateObject4","JobCard","className","job","company","logo","name","title","experience","locations","text","Filter","handleInputChange","event","target","_this","filter","option","value","checked","handleFilterClick","Fragment","options","map","key","type","defaultChecked","onChange","ContainerFilter","jobsList_styles_templateObject","ContainerList","jobsList_styles_templateObject2","JobList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","jobs","wrap","_context","prev","next","fetchJobs","sent","console","log","setState","loaded","filteredJobs","stop","_ref2","_callee2","params","queryParams","_context2","fetch","method","headers","Accept","Content-Type","json","abrupt","t0","_x","apply","arguments","createFilterObject","toConsumableArray","Set","j","selected","selectedFilters","push","splice","indexOf","city","filterJobs","filters","length","includes","renderJobCardList","id","jobCard","renderTombstones","components_filter","handler","Routes","react_router_dom","react_router","exact","path","component","home","jobsList","App","routes","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8da6ffc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sky2.433d5bdb.png\";","import styled from 'styled-components';\n\nexport const mainColor = \"#728992\";\nexport const secondaryColor = \"rgb(255, 255, 255, 0.33)\";\n\nexport const Button = styled.button`\n    background: ${props => props.primary ? mainColor : \"#728992\"};\n    color: ${props => props.primary ? \"white\" : mainColor};\n\n    font-size: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid ${mainColor};\n    border-radius: 3px;\n    `;\n\n\nexport const Title = styled.h1`\n    font-size: 3rem;\n    text-align: center;\n    color: white;\n    `;\n\nexport const Subtitle = styled.h2`\n    font-size:1.5rem;\n    text-align: center;\n    color: ${mainColor}\n    `;\n\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nexport const Wrapper = styled.section`\n    padding: 4em;\n    background: ${props => props.backgroundColor ? props.backgroundColor : \"\"};\n    text-align: center;\n\nspan {\n    font - size: 1rem;\n    color: ${ mainColor};\n}\n`;","import React from 'react';\nimport { Button } from '../styles';\nimport 'bootstrap-css-only/css/bootstrap.css'\n\n\nclass GetJobsButton extends React.Component {\n\n  clickHandler = () => {\n    window.location.href = \"/jobs\";\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Button primary={this.props.background} onClick={() => {\n          this.clickHandler()\n        }}>Let's do it!</Button>\n      </div>\n    );\n  }\n\n}\n\nexport default GetJobsButton;","import React, { Component } from 'react';\nimport { Wrapper, Title, Subtitle } from '../styles';\nimport GetJobButton from '../components/getJobsButton';\nimport 'bootstrap-css-only/css/bootstrap.css'\nimport backgroundImg from '../images/sky2.png'\nimport styled from 'styled-components'\n\n\nconst Background = styled.div`\nbackground-image: url(${backgroundImg});\nbackground-size: cover;\nbackground-repeat: no-repeat;\nbackground-position: left top;\nheight:100%;\n`;\nconst BackgroundOverlay = styled.div`\nbackground-color: rgb(255, 255, 255, 0.09);\nheight: 100%\n`;\n\nconst TitleWrapper = styled.div`\n    margin-top:20em;\n`;\nclass Home extends Component {\n    state = {}\n\n\n    render() {\n\n        return (\n            <Background>\n                <BackgroundOverlay>\n                    <Wrapper>\n                        <div>\n                            <TitleWrapper>\n                                <Title>\n                                    SHOOT FOR THE STARS\n                            </Title>\n                            </TitleWrapper>\n                            <Subtitle>\n                                FIND YOUR DREAM JOB\n                            </Subtitle>\n                            <GetJobButton background=\"#ffffff00\"/>\n\n                        </div>\n                    </Wrapper>\n                </BackgroundOverlay>\n            </Background >\n        )\n    }\n\n}\n\nexport default Home\n","import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n    padding: 0.5em;\n    margin:1em;\n    margin-top:2em;\n    width: 100%;\n    // border: solid;\n    // border-color:#03a7d5\n    border-width:1px;\n    border-radius:12px;\n    background: ${props => props.backgroundColor ? props.backgroundColor : \"lightgray\"};\n    text-align:center;\n    \n    \n    &:hover{\n        // background:#c3c2c7;\n        transform: translate(1em,0);\n    }\n    \n    `;\n\nexport const Logo = styled.img`\n    src: ${props => props.src};\n    width:100px;\n    height:100px;\n    border-radius:50%;\n    margin:2px;\n\n`\nexport const JobTitle = styled.div`\n    text-align:center;\n    font-size:1.25rem;\n    padding-top:0.25em;\n\n    @media (min-width: 576px) {\n        padding-top:1em;\n        text-align:left;    \n        width:50%;\n        padding-left:1rem;\n      }\n`\nexport const JobLocation = styled.div`\n    padding-top:0.25em;\n    text-align:center;\n    font-size:0.9rem;\n    text-align:center;\n\n    @media (min-width: 576px) {\n        text-align:left;    \n        padding-left:1rem;\n      }\n`","import React, { Component } from 'react'\nimport { CardContainer, Logo, JobTitle, JobLocation } from './styles';\n\n\n\nclass JobCard extends Component {\n\n    render() {\n        return (\n            <CardContainer className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-4 col-md-2\">\n                        <div className=\"row\">\n                            <div className=\"col col-12\">\n                                <Logo src={this.props.job.company.logo} />\n                            </div>\n                            <div className=\"col col-12 text-center\">\n                                <span>{this.props.job.company.name}</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col col-12 col-sm-8 col-md-10\">\n\n                        <div className=\"row\">\n                            <div className=\"col-12 align-self-start\">\n                                <JobTitle>\n                                    {this.props.job.title}\n                                </JobTitle>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col col-12 col-sm-12 align-self-start\">\n                                <JobLocation>\n                                    {this.props.job.experience}\n                                </JobLocation>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col col-12 col-sm-12 align-self-start\">\n                                <JobLocation>\n                                    {this.props.job.locations[0].location.text}\n                                </JobLocation>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n\n            </CardContainer>\n        )\n    }\n\n}\n\nexport default JobCard","import React, { Component } from 'react';\n\nclass Filter extends Component {\n\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const name = this.props.filter.name;\n        const option = target.value;\n        const checked = target.checked;\n\n        this.props.handleFilterClick(name, option, checked);\n    }\n\n\n\n    render() {\n\n\n        return (\n            <React.Fragment>\n                <div className=\"card\">\n                    <div className=\"card-group-item\">\n                        <div className=\"card-header\">\n                            <h6>{this.props.filter.name} </h6>\n                        </div>\n                        <div className=\"filter-content\">\n                            <div className=\"card-body\">\n\n                                {this.props.filter.options.map(option => (\n                                    <label key={option} className=\"form-check\">\n                                        <input\n                                            className=\"form-check-input\"\n                                            type={this.props.filter.type}\n                                            value={option}\n                                            name={this.props.filter.name}\n                                            defaultChecked={option.checked}\n                                            onChange={this.handleInputChange}\n                                        />\n\n                                        <span className=\"form-check-label\">\n                                            {option}\n                                        </span>\n                                    </label>\n\n                                ))}\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const ContainerFilter = styled.div`\n    height: 100%;\n    border-right:0px;\n    float:left;\n    margin-top:2em;\n    `\n\n\nexport const ContainerList = styled.div`\n    //border-left:1px solid;\n\n\n\n    `","import React, { Component } from 'react';\nimport JobCard from '../../components/jobCard/jobCard';\nimport Filter from '../../components/filter';\nimport { ContainerFilter, ContainerList } from './styles';\n\nclass JobList extends Component {\n\n    //TODO actually filter\n\n    constructor() {\n        super();\n        this.state = {\n            jobs: [],\n            filteredJobs: [],\n            loaded: false,\n            selectedFilters: {\n                experience: [],\n                company: [],\n                city: []\n            }\n        }\n    }\n\n\n\n    componentDidMount = async () => {\n        const jobs = await this.fetchJobs();\n        console.log(jobs)\n        this.setState({ jobs, loaded: true, filteredJobs: jobs })\n    }\n\n    fetchJobs = async (params) => {\n        const queryParams = params ? params : \"\";\n        try {\n            let jobs = await fetch('/api/jobs' + queryParams, {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                }\n            });\n            return await jobs.json();\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    createFilterObject = jobs => {\n\n        //filter by experience level\n        const filterByExp = {\n            name: \"Experience\",\n            type: \"checkbox\",\n            options: [...new Set(jobs.map(job => job.experience))]\n        }\n\n        //filter by company\n        const filterByCompany = {\n            name: \"Company\",\n            type: \"checkbox\",\n            options: [...new Set(jobs.map(job => job.company.name))]\n        }\n\n        //filter by location\n        const filterByLocation = {\n            name: \"City\",\n            type: \"checkbox\",\n            options: [...new Set(jobs.filter(job => job.locations[0].location.text).map(j => j.locations[0].location.text))]\n        }\n\n        return [filterByExp, filterByCompany, filterByLocation]\n    }\n\n    handleFilterClick = (name, option, selected) => {\n\n        let selectedFilters = [];\n        switch (name) {\n            case \"Experience\":\n                selectedFilters = this.state.selectedFilters\n                selected ? selectedFilters.experience.push(option) : selectedFilters.experience.splice(selectedFilters.experience.indexOf(option), 1);\n                this.setState(selectedFilters);\n                break;\n            case \"Company\":\n                selectedFilters = this.state.selectedFilters\n                selected ? selectedFilters.company.push(option) : selectedFilters.company.splice(selectedFilters.company.indexOf(option), 1);\n                this.setState(selectedFilters);\n                break;\n            case \"City\":\n                selectedFilters = this.state.selectedFilters\n                selected ? selectedFilters.city.push(option) : selectedFilters.city.splice(selectedFilters.city.indexOf(option), 1);\n                this.setState(selectedFilters);\n                break;\n            default: return\n        }\n    }\n\n\n    filterJobs = (jobs, filters) => {\n        let filteredJobs = jobs;\n\n        //by experience\n        if (filters.experience.length > 0) {\n            filteredJobs = filteredJobs.filter(job => filters.experience.includes(job.experience))\n        }\n\n        //by company\n        if (filters.company.length > 0) {\n            filteredJobs = filteredJobs.filter(job => filters.company.includes(job.company.name))\n        }\n\n        //by city\n        if (filters.city.length > 0) {\n            filteredJobs = filteredJobs.filter(job => filters.city.includes(job.locations[0].location.text))\n        }\n\n        return filteredJobs;\n    }\n\n    renderJobCardList = () => {\n        const filteredJobs = this.filterJobs(this.state.jobs, this.state.selectedFilters);\n        return (\n            filteredJobs.map(job => (\n                <div key={job.id}\n                    className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                    <JobCard job={job} />\n                </div>\n            ))\n        )\n    }\n\n    renderTombstones = () => {\n        return \"no jobs\"\n    }\n\n\n    render() {\n        const filters = this.state.loaded ? this.createFilterObject(this.state.jobs) : [];\n        return (\n            <div className=\"container-fluid\">\n                <ContainerFilter>\n                    {this.state.loaded ? filters.map(filter => (\n\n                        <Filter key={filter.name} handler={this.handleFilterClick} filter={filter} handleFilterClick={this.handleFilterClick} />\n\n                    ))\n                        :\n                        \"\"\n                    }\n                </ContainerFilter>\n\n                <ContainerList className=\"container\">\n                    <div className=\"row\"> {this.state.loaded ?\n                        this.renderJobCardList()\n                        :\n                        this.renderTombstones()\n                    }\n                    </div>\n                </ContainerList>\n\n            </div>\n        )\n    }\n}\nexport default JobList","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './views/home';\nimport JobList from './views/jobsList/jobsList'\n\nconst Routes = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={() => <Home />} />\n            <Route exact path=\"/jobs\" component={() => <JobList />} />\n        </Switch>\n    </BrowserRouter>\n)\n\n\nexport default Routes;","import React from 'react';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    < Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}